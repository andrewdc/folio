---
// @ts-nocheck
import { Image } from 'astro:assets';

const { folder = 'research' } = Astro.props;

const allImages = import.meta.glob(
  '../assets/galleries/**/*.{jpg,jpeg,png,webp,gif}',
  { eager: true, import: 'default' }
);

// console.log('üß™ Folder value:', folder);
// console.log('üì¶ All image paths:', Object.keys(allImages));

// Build the images array with manual inspection
const images = Object.entries(allImages)
  .map(([path, mod]) => {
    console.log('üîç Checking path:', path);
    if (path.includes(`/${folder}/`)) {
      console.log('‚úÖ Matched path:', path);
      return mod;
    } else {
      return null;
    }
  })
  .filter(Boolean)
  .filter((img) => typeof img === 'object' && 'src' in img);

// console.log('üñº Final image objects:', images);
---

<style>
  .image-grid {
    position: relative;
    display: grid;
    /* grid-template-columns: repeat(auto-fill, minmax(300px, 1fr)); */
    grid-template-columns: minmax(300px, 1fr);
    gap: 1rem;
    /* ensure hovered images can overflow their cell */
    overflow: visible;
  }

  .image-grid img {
    display: block;
    width: 100%;
    height: auto;
    object-fit: cover;

    /* base styles */
    border-radius: 0.5rem;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);

    /* transition for smooth scaling */
    transition:
      transform 150ms ease,
      box-shadow 150ms ease;
  }

  .image-grid img:hover {
    /* slightly scale up */
    transform: scale(1.2) translateX(-5vw);
    /* bring it above neighbors */
    z-index: 1;

    /* deepen the shadow for a ‚Äúlifted‚Äù look */
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2);
  }
</style>

<div class="image-grid">
  {
    images.map((img) => (
      <Image class="astro-image" src={img} alt="Gallery image" loading="lazy" />
    ))
  }
</div>
